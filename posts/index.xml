<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on hiddenbyte.log</title><link>https://mehul.pt/posts/</link><description>Recent content in Posts on hiddenbyte.log</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 20 Apr 2025 11:23:26 +0100</lastBuildDate><atom:link href="https://mehul.pt/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Nostalgia</title><link>https://mehul.pt/posts/nostalgia/</link><pubDate>Sun, 20 Apr 2025 11:23:26 +0100</pubDate><guid>https://mehul.pt/posts/nostalgia/</guid><description>&lt;p>Nostalgia is counter to the natural flow of time. The arrow of time moves forward, yet nostalgia pulls us backward, creating resistance to the present and future. Thus, nostalgia is a feeling that is not in harmony with the natural flow of time.&lt;/p>
&lt;p>This does not mean we should forget the past or any feelings, whether bad or good. But we should not become attached to the past—being attached to the past is what nostalgia is—and we should let go of the past.&lt;/p></description></item><item><title>"Life is not meant to be rushed through"</title><link>https://mehul.pt/posts/life-is-not-meant-to-be-rushed-through/</link><pubDate>Sun, 20 Oct 2024 11:23:56 +0100</pubDate><guid>https://mehul.pt/posts/life-is-not-meant-to-be-rushed-through/</guid><description>&lt;blockquote>
&lt;p>life is not meant to be rushed through. It is not a race, nor is it a problem to be solved. It is an experience to be lived, and living well requires presence.&lt;/p>
&lt;p>in &lt;a href="https://billwear.github.io/art-of-attention.html">the quiet art of attention&lt;/a>&lt;/p>&lt;/blockquote></description></item><item><title>Digging into Goroutines I</title><link>https://mehul.pt/posts/digging-into-goroutines-1/</link><pubDate>Sun, 05 Jul 2020 23:34:56 +0100</pubDate><guid>https://mehul.pt/posts/digging-into-goroutines-1/</guid><description>&lt;p>Go enables writing programs with concurrent threads of execution. And it does so by introducing the concept of &lt;em>goroutine&lt;/em>.&lt;/p>
&lt;blockquote>
&lt;p>A goroutine has a simple model: it is a function executing concurrently with other goroutines in the same address space.&lt;/p>
&lt;p>in &lt;a href="https://golang.org/doc/effective_go.html#goroutines" title="Effective Go">Effective Go&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>Before digging into goroutines, having an understanding on &amp;ldquo;how&amp;rdquo; the &lt;em>Go compiler&lt;/em> and &lt;em>runtime&lt;/em> work together in order to launch a &lt;em>goroutine&lt;/em> will pave the path to its internals.&lt;/p></description></item></channel></rss>